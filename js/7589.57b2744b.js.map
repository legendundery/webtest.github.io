{"version":3,"file":"js/7589.57b2744b.js","mappings":"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","sources":["webpack://webide/./src/views/CourseLearning/LearningCourse.vue?2a16","webpack://webide/./src/views/CourseLearning/LearningCourse.vue","webpack://webide/./src/views/CourseLearning/LearningCourse.vue?a50d"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vShow as _vShow, withDirectives as _withDirectives, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"box\" }\nconst _hoisted_2 = {\n  class: \"left-content\",\n  title: \"左\"\n}\nconst _hoisted_3 = { class: \"chapters-container\" }\nconst _hoisted_4 = [\"onClick\"]\nconst _hoisted_5 = [\"onClick\"]\nconst _hoisted_6 = {\n  key: 0,\n  class: \"player-container\"\n}\nconst _hoisted_7 = {\n  class: \"video-container\",\n  style: {\"width\":\"100%\",\"height\":\"500px\"}\n}\nconst _hoisted_8 = [\"src\"]\nconst _hoisted_9 = {\n  class: \"right-content\",\n  title: \"右\"\n}\nconst _hoisted_10 = { key: 0 }\nconst _hoisted_11 = { key: 1 }\nconst _hoisted_12 = { class: \"coding_space\" }\nconst _hoisted_13 = {\n  id: \"windowContent\",\n  ref: \"windowContentRef\"\n}\nconst _hoisted_14 = { id: \"xuanxiangka\" }\n\nimport { ref, onMounted, computed, watch } from \"vue\";\n\nimport codeSpace from \"@/components/codeSpace.vue\";\nimport { compileCpp } from \"@/api/submitCodeOnPlayground\";\n\ninterface CourseData {\n  title: string;\n  chapters: Chapter[];\n}\n\ninterface Chapter {\n  ID: number;\n  name: string;\n  sections: Section[];\n}\n\ninterface Section {\n  ID: number;\n  name: string;\n  videoPath: string;\n  codeFiles: CodeFile[];\n}\n\ninterface CodeFile {\n  ID: number;\n  timepoint: number;\n  codepath: string;\n  inputpath: string;\n  isloading: boolean;\n}\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'LearningCourse',\n  setup(__props) {\n\nconst videoRef = ref<HTMLVideoElement | null>(null);\nconst courseData = ref<CourseData | null>(null);\nconst selectedSection = ref<Section | null>(null);\nconst courseTitle = ref(\"\");\nconst chapterName = ref(\"\");\nconst openChapters = ref<number[]>([]);\nconst currentCodeFile = ref<CodeFile | null>(null);\nconst codeContent = ref(\"\");\nconst inputContent = ref(\"\");\nconst loadingCode = ref(false);\n\nconst fetchCourseData = async () => {\n  try {\n    const response = await fetch(\"/course.json\");\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch course data\");\n    }\n    courseData.value = await response.json();\n    courseTitle.value = courseData.value?.title || \"C++学习\";\n  } catch (error) {\n    console.error(\"Error fetching course data:\", error);\n  }\n};\n\nconst selectSection = (section: Section, chapter: string) => {\n  selectedSection.value = section;\n  chapterName.value = chapter;\n  currentCodeFile.value = null;\n  codeContent.value = \"\";\n  inputContent.value = \"\";\n\n  if (videoRef.value) {\n    videoRef.value.currentTime = 0;\n    videoRef.value.src = section.videoPath;\n    videoRef.value.load();\n  }\n};\n\nconst toggleChapter = (index: number) => {\n  const chapterIndex = openChapters.value.indexOf(index);\n  if (chapterIndex > -1) {\n    openChapters.value.splice(chapterIndex, 1);\n  } else {\n    openChapters.value.push(index);\n  }\n};\n\nconst isChapterOpen = (index: number) => {\n  return openChapters.value.includes(index);\n};\n\nconst fetchFileContent = async (path: string) => {\n  try {\n    const response = await fetch(path);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch file: ${path}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(\"Error fetching file content:\", error);\n    return \"文件加载失败\";\n  }\n};\n\nconst updateCurrentCodeFile = async () => {\n  if (!videoRef.value || !selectedSection.value) return;\n\n  const currentTime = videoRef.value.currentTime;\n  const codeFiles = selectedSection.value.codeFiles;\n\n  // 找到当前时间点对应的代码文件\n  let currentIndex = -1;\n  for (let i = 0; i < codeFiles.length; i++) {\n    if (currentTime >= codeFiles[i].timepoint) {\n      currentIndex = i;\n    } else {\n      break;\n    }\n  }\n\n  if (\n    currentIndex !== -1 &&\n    codeFiles[currentIndex] !== currentCodeFile.value\n  ) {\n    currentCodeFile.value = codeFiles[currentIndex];\n    loadingCode.value = true;\n\n    // 并行加载代码和输入文件\n    const [code, input] = await Promise.all([\n      fetchFileContent(currentCodeFile.value.codepath),\n      fetchFileContent(currentCodeFile.value.inputpath),\n    ]);\n\n    codeContent.value = code;\n    inputContent.value = input;\n    loadingCode.value = false;\n    panes.value[0].codingcontent = `${codeContent.value}`;\n    panes.value[0].inputcontent = `${inputContent.value}`;\n    if (currentCodeFile.value.isloading !== true) {\n      autoadd();\n      currentCodeFile.value.isloading = true;\n    }\n  }\n};\n\nconst autoadd = () => {\n  activeKey.value = ++newTabIndex.value;\n  panes.value.push({\n    title: `videocode${activeKey.value}`,\n    key: activeKey.value,\n    codingcontent: `${codeContent.value}`,\n    inputcontent: `${inputContent.value}`,\n    outputcontent: \"\",\n    fileID: ``,\n  });\n};\n\nonMounted(() => {\n  fetchCourseData();\n});\n\nwatch(selectedSection, (newSection) => {\n  if (newSection && videoRef.value) {\n    videoRef.value.play().catch((err) => {\n      console.error(\"Error playing video:\", err);\n    });\n  }\n});\n\n//代码空间部分\n\nconst currentoutput = ref(\"\");\nconst currentid = ref(0);\n\nconst compile = () => {\n  currentid.value = activeKey.value;\n  const updateJSON = ref({\n    code: panes.value[activeKey.value].codingcontent,\n    input: panes.value[activeKey.value].inputcontent,\n  });\n  console.log(updateJSON);\n  console.log(currentid.value);\n  console.log(activeKey.value);\n\n  compileCpp(JSON.stringify(updateJSON.value))\n    //.then((response) => JSON.parse(response))\n    .then((result) => {\n      currentoutput.value = result.data.output;\n      panes.value[currentid.value].outputcontent = currentoutput.value;\n      console.log(currentoutput.value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n// 搜索函数\nfunction useFileSearch(courseData: CourseData) {\n  // 当前搜索的FILEID\n  const searchFileId = ref<string>(\"\");\n\n  // 搜索结果\n  const searchResult = computed(() => {\n    if (!searchFileId.value) return null;\n\n    // 解析FILEID为数组\n    const ids = searchFileId.value.split(\"-\").map(Number);\n    if (ids.length !== 3) return null;\n\n    const [chapterId, sectionId, fileId] = ids;\n\n    // 查找对应的章节\n    const chapter = courseData.chapters.find((ch) => ch.ID === chapterId);\n    if (!chapter) return null;\n\n    // 查找对应的小节\n    const section = chapter.sections.find((sec) => sec.ID === sectionId);\n    if (!section) return null;\n\n    // 查找对应的代码文件\n    const codeFile = section.codeFiles.find((file) => file.ID === fileId);\n    if (!codeFile) return null;\n\n    // 返回完整信息\n    return {\n      chapter,\n      section,\n      codeFile,\n      fullPath: `${chapter.name}/${section.name}/${codeFile.ID}`,\n    };\n  });\n\n  // 执行搜索的函数\n  const searchFile = (fileId: string) => {\n    searchFileId.value = fileId;\n  };\n\n  return {\n    searchFileId,\n    searchResult,\n    searchFile,\n  };\n}\n\n//选项卡\n\nconst panes = ref<\n  {\n    title: string;\n    key: number;\n    codingcontent: any;\n    inputcontent: any;\n    outputcontent: any;\n    closable?: boolean;\n    fileID: string;\n  }[]\n>(\n  new Array(1).fill(null).map((_, index) => {\n    const id = index;\n    const codingcontent = ref(`write code here.`);\n    const inputcontent = ref(\"\");\n    const outputcontent = ref(\"\");\n    return {\n      title: `code ${id}`,\n      key: id,\n      codingcontent: codingcontent,\n      inputcontent: inputcontent,\n      outputcontent: outputcontent,\n      fileID: \"-1\",\n    };\n  })\n);\nconst activeKey = ref(panes.value[0].key);\n//console.log(activeKey.value);\nconst newTabIndex = ref(0);\n\nconst add = () => {\n  activeKey.value = ++newTabIndex.value;\n  panes.value.push({\n    title: `code${activeKey.value}`,\n    key: activeKey.value,\n    codingcontent: `write code here. ${activeKey.value}`,\n    inputcontent: \"\",\n    outputcontent: \"\",\n    fileID: \"-1\",\n  });\n};\n\nconst remove = (targetKey: number) => {\n  let lastIndex = 0;\n  panes.value.forEach((pane, i) => {\n    if (pane.key === targetKey) {\n      lastIndex = i - 1;\n    }\n  });\n  panes.value = panes.value.filter((pane) => pane.key !== targetKey);\n  if (panes.value.length && activeKey.value === targetKey) {\n    if (lastIndex >= 0) {\n      activeKey.value = panes.value[lastIndex].key;\n    } else {\n      activeKey.value = panes.value[0].key;\n    }\n  }\n};\n\nconst onEdit = (targetKey: number) => {\n  remove(targetKey);\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_button = _resolveComponent(\"a-button\")!\n  const _component_a_row = _resolveComponent(\"a-row\")!\n  const _component_a_col = _resolveComponent(\"a-col\")!\n  const _component_a_tab_pane = _resolveComponent(\"a-tab-pane\")!\n  const _component_a_tabs = _resolveComponent(\"a-tabs\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createElementVNode(\"h1\", null, _toDisplayString(courseTitle.value), 1),\n      _createElementVNode(\"h2\", null, _toDisplayString(selectedSection.value?.name || \"请选择章节\"), 1),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _cache[1] || (_cache[1] = _createElementVNode(\"h2\", null, \"课程章节\", -1)),\n        _createElementVNode(\"ul\", null, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(courseData.value?.chapters || [], (chapter, chapterIndex) => {\n            return (_openBlock(), _createElementBlock(\"li\", { key: chapterIndex }, [\n              _createElementVNode(\"div\", {\n                onClick: ($event: any) => (toggleChapter(chapterIndex))\n              }, _toDisplayString(chapter.name), 9, _hoisted_4),\n              _withDirectives(_createElementVNode(\"ul\", null, [\n                (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(chapter.sections, (section, sectionIndex) => {\n                  return (_openBlock(), _createElementBlock(\"li\", { key: sectionIndex }, [\n                    _createElementVNode(\"button\", {\n                      onClick: ($event: any) => (selectSection(section, chapter.name))\n                    }, _toDisplayString(section.name), 9, _hoisted_5)\n                  ]))\n                }), 128))\n              ], 512), [\n                [_vShow, isChapterOpen(chapterIndex)]\n              ])\n            ]))\n          }), 128))\n        ])\n      ]),\n      (selectedSection.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n            _createElementVNode(\"div\", _hoisted_7, [\n              _createElementVNode(\"video\", {\n                ref_key: \"videoRef\",\n                ref: videoRef,\n                controls: \"\",\n                onTimeupdate: updateCurrentCodeFile,\n                style: {\"width\":\"100%\",\"height\":\"auto\"}\n              }, [\n                _createElementVNode(\"source\", {\n                  src: selectedSection.value?.videoPath,\n                  type: \"video/mp4\"\n                }, null, 8, _hoisted_8),\n                _cache[2] || (_cache[2] = _createTextVNode(\" 您的浏览器不支持视频播放 \"))\n              ], 544)\n            ])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_9, [\n      _createElementVNode(\"div\", null, [\n        (!currentCodeFile.value)\n          ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, \"等待视频播放...\"))\n          : (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [\n              _createVNode(_component_a_button)\n            ])),\n        _createElementVNode(\"div\", _hoisted_12, [\n          _createElementVNode(\"div\", _hoisted_13, [\n            _createElementVNode(\"div\", null, [\n              _createVNode(_component_a_button, { onClick: add }, {\n                default: _withCtx(() => _cache[3] || (_cache[3] = [\n                  _createTextVNode(\"ADD\")\n                ])),\n                _: 1\n              })\n            ]),\n            _createElementVNode(\"div\", _hoisted_14, [\n              _createVNode(_component_a_tabs, {\n                activeKey: activeKey.value,\n                \"onUpdate:activeKey\": _cache[0] || (_cache[0] = ($event: any) => ((activeKey).value = $event)),\n                \"hide-add\": \"\",\n                type: \"editable-card\",\n                onEdit: onEdit\n              }, {\n                default: _withCtx(() => [\n                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(panes.value, (pane) => {\n                    return (_openBlock(), _createBlock(_component_a_tab_pane, {\n                      key: pane.key,\n                      tab: pane.title,\n                      closable: pane.closable\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_a_row, { style: {\"height\":\"400px\"} }, {\n                          default: _withCtx(() => [\n                            _createVNode(codeSpace, {\n                              title: \"Code Space\",\n                              compile: compile,\n                              modelValue: pane.codingcontent,\n                              \"onUpdate:modelValue\": ($event: any) => ((pane.codingcontent) = $event)\n                            }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                          ]),\n                          _: 2\n                        }, 1024),\n                        _createVNode(_component_a_row, null, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_a_col, { span: 12 }, {\n                              default: _withCtx(() => [\n                                _createVNode(codeSpace, {\n                                  title: \"input\",\n                                  modelValue: pane.inputcontent,\n                                  \"onUpdate:modelValue\": ($event: any) => ((pane.inputcontent) = $event)\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                              ]),\n                              _: 2\n                            }, 1024),\n                            _createVNode(_component_a_col, { span: 12 }, {\n                              default: _withCtx(() => [\n                                _createVNode(codeSpace, {\n                                  title: \"output\",\n                                  modelValue: pane.outputcontent,\n                                  \"onUpdate:modelValue\": ($event: any) => ((pane.outputcontent) = $event)\n                                }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                              ]),\n                              _: 2\n                            }, 1024)\n                          ]),\n                          _: 2\n                        }, 1024)\n                      ]),\n                      _: 2\n                    }, 1032, [\"tab\", \"closable\"]))\n                  }), 128))\n                ]),\n                _: 1\n              }, 8, [\"activeKey\"])\n            ])\n          ], 512)\n        ])\n      ])\n    ])\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"box\">\n    <div class=\"left-content\" title=\"左\">\n      <h1>{{ courseTitle }}</h1>\n      <h2>{{ selectedSection?.name || \"请选择章节\" }}</h2>\n      <div class=\"chapters-container\">\n        <h2>课程章节</h2>\n        <ul>\n          <li\n            v-for=\"(chapter, chapterIndex) in courseData?.chapters || []\"\n            :key=\"chapterIndex\"\n          >\n            <div @click=\"toggleChapter(chapterIndex)\">{{ chapter.name }}</div>\n            <ul v-show=\"isChapterOpen(chapterIndex)\">\n              <li\n                v-for=\"(section, sectionIndex) in chapter.sections\"\n                :key=\"sectionIndex\"\n              >\n                <button @click=\"selectSection(section, chapter.name)\">\n                  {{ section.name }}\n                </button>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </div>\n      <div class=\"player-container\" v-if=\"selectedSection\">\n        <div class=\"video-container\" style=\"width: 100%; height: 500px\">\n          <video\n            ref=\"videoRef\"\n            controls\n            @timeupdate=\"updateCurrentCodeFile\"\n            style=\"width: 100%; height: auto\"\n          >\n            <source :src=\"selectedSection?.videoPath\" type=\"video/mp4\" />\n            您的浏览器不支持视频播放\n          </video>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"right-content\" title=\"右\">\n      <div>\n        <div v-if=\"!currentCodeFile\">等待视频播放...</div>\n        <div v-else>\n          <a-button></a-button>\n        </div>\n        <div class=\"coding_space\">\n          <div id=\"windowContent\" ref=\"windowContentRef\">\n            <div>\n              <a-button @click=\"add\">ADD</a-button>\n            </div>\n            <div id=\"xuanxiangka\">\n              <a-tabs\n                v-model:activeKey=\"activeKey\"\n                hide-add\n                type=\"editable-card\"\n                @edit=\"onEdit\"\n              >\n                <a-tab-pane\n                  v-for=\"pane in panes\"\n                  :key=\"pane.key\"\n                  :tab=\"pane.title\"\n                  :closable=\"pane.closable\"\n                >\n                  <a-row style=\"height: 400px\">\n                    <codeSpace\n                      title=\"Code Space\"\n                      :compile=\"compile\"\n                      v-model:=\"pane.codingcontent\"\n                    />\n                  </a-row>\n                  <a-row>\n                    <a-col :span=\"12\">\n                      <codeSpace title=\"input\" v-model:=\"pane.inputcontent\" />\n                    </a-col>\n                    <a-col :span=\"12\">\n                      <codeSpace title=\"output\" v-model:=\"pane.outputcontent\" />\n                    </a-col>\n                  </a-row>\n                </a-tab-pane>\n              </a-tabs>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style>\n.box {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n}\n\n.left-content {\n  flex: 1;\n}\n\n.right-content {\n  flex: 1;\n}\n</style>\n\n<script lang=\"ts\" setup>\nimport { ref, onMounted, computed, watch } from \"vue\";\n\ninterface CourseData {\n  title: string;\n  chapters: Chapter[];\n}\n\ninterface Chapter {\n  ID: number;\n  name: string;\n  sections: Section[];\n}\n\ninterface Section {\n  ID: number;\n  name: string;\n  videoPath: string;\n  codeFiles: CodeFile[];\n}\n\ninterface CodeFile {\n  ID: number;\n  timepoint: number;\n  codepath: string;\n  inputpath: string;\n  isloading: boolean;\n}\n\nconst videoRef = ref<HTMLVideoElement | null>(null);\nconst courseData = ref<CourseData | null>(null);\nconst selectedSection = ref<Section | null>(null);\nconst courseTitle = ref(\"\");\nconst chapterName = ref(\"\");\nconst openChapters = ref<number[]>([]);\nconst currentCodeFile = ref<CodeFile | null>(null);\nconst codeContent = ref(\"\");\nconst inputContent = ref(\"\");\nconst loadingCode = ref(false);\n\nconst fetchCourseData = async () => {\n  try {\n    const response = await fetch(\"/course.json\");\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch course data\");\n    }\n    courseData.value = await response.json();\n    courseTitle.value = courseData.value?.title || \"C++学习\";\n  } catch (error) {\n    console.error(\"Error fetching course data:\", error);\n  }\n};\n\nconst selectSection = (section: Section, chapter: string) => {\n  selectedSection.value = section;\n  chapterName.value = chapter;\n  currentCodeFile.value = null;\n  codeContent.value = \"\";\n  inputContent.value = \"\";\n\n  if (videoRef.value) {\n    videoRef.value.currentTime = 0;\n    videoRef.value.src = section.videoPath;\n    videoRef.value.load();\n  }\n};\n\nconst toggleChapter = (index: number) => {\n  const chapterIndex = openChapters.value.indexOf(index);\n  if (chapterIndex > -1) {\n    openChapters.value.splice(chapterIndex, 1);\n  } else {\n    openChapters.value.push(index);\n  }\n};\n\nconst isChapterOpen = (index: number) => {\n  return openChapters.value.includes(index);\n};\n\nconst fetchFileContent = async (path: string) => {\n  try {\n    const response = await fetch(path);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch file: ${path}`);\n    }\n    return await response.text();\n  } catch (error) {\n    console.error(\"Error fetching file content:\", error);\n    return \"文件加载失败\";\n  }\n};\n\nconst updateCurrentCodeFile = async () => {\n  if (!videoRef.value || !selectedSection.value) return;\n\n  const currentTime = videoRef.value.currentTime;\n  const codeFiles = selectedSection.value.codeFiles;\n\n  // 找到当前时间点对应的代码文件\n  let currentIndex = -1;\n  for (let i = 0; i < codeFiles.length; i++) {\n    if (currentTime >= codeFiles[i].timepoint) {\n      currentIndex = i;\n    } else {\n      break;\n    }\n  }\n\n  if (\n    currentIndex !== -1 &&\n    codeFiles[currentIndex] !== currentCodeFile.value\n  ) {\n    currentCodeFile.value = codeFiles[currentIndex];\n    loadingCode.value = true;\n\n    // 并行加载代码和输入文件\n    const [code, input] = await Promise.all([\n      fetchFileContent(currentCodeFile.value.codepath),\n      fetchFileContent(currentCodeFile.value.inputpath),\n    ]);\n\n    codeContent.value = code;\n    inputContent.value = input;\n    loadingCode.value = false;\n    panes.value[0].codingcontent = `${codeContent.value}`;\n    panes.value[0].inputcontent = `${inputContent.value}`;\n    if (currentCodeFile.value.isloading !== true) {\n      autoadd();\n      currentCodeFile.value.isloading = true;\n    }\n  }\n};\n\nconst autoadd = () => {\n  activeKey.value = ++newTabIndex.value;\n  panes.value.push({\n    title: `videocode${activeKey.value}`,\n    key: activeKey.value,\n    codingcontent: `${codeContent.value}`,\n    inputcontent: `${inputContent.value}`,\n    outputcontent: \"\",\n    fileID: ``,\n  });\n};\n\nonMounted(() => {\n  fetchCourseData();\n});\n\nwatch(selectedSection, (newSection) => {\n  if (newSection && videoRef.value) {\n    videoRef.value.play().catch((err) => {\n      console.error(\"Error playing video:\", err);\n    });\n  }\n});\n\n//代码空间部分\n\nimport codeSpace from \"@/components/codeSpace.vue\";\nimport { compileCpp } from \"@/api/submitCodeOnPlayground\";\n\nconst currentoutput = ref(\"\");\nconst currentid = ref(0);\n\nconst compile = () => {\n  currentid.value = activeKey.value;\n  const updateJSON = ref({\n    code: panes.value[activeKey.value].codingcontent,\n    input: panes.value[activeKey.value].inputcontent,\n  });\n  console.log(updateJSON);\n  console.log(currentid.value);\n  console.log(activeKey.value);\n\n  compileCpp(JSON.stringify(updateJSON.value))\n    //.then((response) => JSON.parse(response))\n    .then((result) => {\n      currentoutput.value = result.data.output;\n      panes.value[currentid.value].outputcontent = currentoutput.value;\n      console.log(currentoutput.value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n// 搜索函数\nfunction useFileSearch(courseData: CourseData) {\n  // 当前搜索的FILEID\n  const searchFileId = ref<string>(\"\");\n\n  // 搜索结果\n  const searchResult = computed(() => {\n    if (!searchFileId.value) return null;\n\n    // 解析FILEID为数组\n    const ids = searchFileId.value.split(\"-\").map(Number);\n    if (ids.length !== 3) return null;\n\n    const [chapterId, sectionId, fileId] = ids;\n\n    // 查找对应的章节\n    const chapter = courseData.chapters.find((ch) => ch.ID === chapterId);\n    if (!chapter) return null;\n\n    // 查找对应的小节\n    const section = chapter.sections.find((sec) => sec.ID === sectionId);\n    if (!section) return null;\n\n    // 查找对应的代码文件\n    const codeFile = section.codeFiles.find((file) => file.ID === fileId);\n    if (!codeFile) return null;\n\n    // 返回完整信息\n    return {\n      chapter,\n      section,\n      codeFile,\n      fullPath: `${chapter.name}/${section.name}/${codeFile.ID}`,\n    };\n  });\n\n  // 执行搜索的函数\n  const searchFile = (fileId: string) => {\n    searchFileId.value = fileId;\n  };\n\n  return {\n    searchFileId,\n    searchResult,\n    searchFile,\n  };\n}\n\n//选项卡\n\nconst panes = ref<\n  {\n    title: string;\n    key: number;\n    codingcontent: any;\n    inputcontent: any;\n    outputcontent: any;\n    closable?: boolean;\n    fileID: string;\n  }[]\n>(\n  new Array(1).fill(null).map((_, index) => {\n    const id = index;\n    const codingcontent = ref(`write code here.`);\n    const inputcontent = ref(\"\");\n    const outputcontent = ref(\"\");\n    return {\n      title: `code ${id}`,\n      key: id,\n      codingcontent: codingcontent,\n      inputcontent: inputcontent,\n      outputcontent: outputcontent,\n      fileID: \"-1\",\n    };\n  })\n);\nconst activeKey = ref(panes.value[0].key);\n//console.log(activeKey.value);\nconst newTabIndex = ref(0);\n\nconst add = () => {\n  activeKey.value = ++newTabIndex.value;\n  panes.value.push({\n    title: `code${activeKey.value}`,\n    key: activeKey.value,\n    codingcontent: `write code here. ${activeKey.value}`,\n    inputcontent: \"\",\n    outputcontent: \"\",\n    fileID: \"-1\",\n  });\n};\n\nconst remove = (targetKey: number) => {\n  let lastIndex = 0;\n  panes.value.forEach((pane, i) => {\n    if (pane.key === targetKey) {\n      lastIndex = i - 1;\n    }\n  });\n  panes.value = panes.value.filter((pane) => pane.key !== targetKey);\n  if (panes.value.length && activeKey.value === targetKey) {\n    if (lastIndex >= 0) {\n      activeKey.value = panes.value[lastIndex].key;\n    } else {\n      activeKey.value = panes.value[0].key;\n    }\n  }\n};\n\nconst onEdit = (targetKey: number) => {\n  remove(targetKey);\n};\n</script>\n\n<style scoped>\n/* 整体布局 */\n.course-list {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n}\n\nh1 {\n  color: #2c3e50;\n  font-size: 24px;\n  margin-bottom: 20px;\n}\n\nh2 {\n  color: #34495e;\n  font-size: 18px;\n  margin-top: 30px;\n  margin-bottom: 15px;\n}\n\n/* 课程目录样式 */\nul {\n  list-style-type: none;\n  padding: 0;\n}\n\nli {\n  margin-bottom: 10px;\n}\n\nli > div {\n  cursor: pointer;\n  font-weight: 500;\n  color: #3498db;\n  padding: 8px 0;\n  transition: color 0.2s;\n}\n\nli > div:hover {\n  color: #2980b9;\n}\n\nli > ul {\n  padding-left: 20px;\n  border-left: 1px solid #eee;\n  margin-left: 5px;\n  margin-top: 5px;\n}\n\n/* 章节按钮样式 */\nbutton {\n  background-color: #f5f5f5;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  padding: 6px 12px;\n  margin-right: 10px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #e8e8e8;\n}\n\n/* 课程详情样式 */\n.course-details {\n  background-color: #f9f9f9;\n  border-radius: 5px;\n  padding: 15px;\n  margin-top: 20px;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n}\n\n.course-details p {\n  margin: 8px 0;\n}\n\n/* 代码文件列表样式 */\n.code-files {\n  margin-top: 15px;\n  padding: 10px;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n}\n\n.code-files p {\n  margin: 5px 0;\n}\n\n/* 加载状态样式 */\n.loading {\n  color: #95a5a6;\n  font-style: italic;\n  text-align: center;\n  padding: 30px;\n}\n\n/* 未选择章节提示 */\n.no-selection {\n  color: #7f8c8d;\n  font-style: italic;\n  padding: 20px;\n  text-align: center;\n}\n</style>\n","import script from \"./LearningCourse.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./LearningCourse.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./LearningCourse.vue?vue&type=style&index=0&id=70b39878&lang=css\"\nimport \"./LearningCourse.vue?vue&type=style&index=1&id=70b39878&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-70b39878\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","title","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","key","_hoisted_7","style","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","id","ref","_hoisted_14","_defineComponent","__name","setup","__props","videoRef","courseData","selectedSection","courseTitle","chapterName","openChapters","currentCodeFile","codeContent","inputContent","loadingCode","fetchCourseData","async","response","fetch","ok","Error","value","json","error","console","selectSection","section","chapter","currentTime","src","videoPath","load","toggleChapter","index","chapterIndex","indexOf","splice","push","isChapterOpen","includes","fetchFileContent","path","text","updateCurrentCodeFile","codeFiles","currentIndex","i","length","timepoint","code","input","Promise","all","codepath","inputpath","panes","codingcontent","inputcontent","isloading","autoadd","activeKey","newTabIndex","outputcontent","fileID","onMounted","watch","newSection","play","catch","err","currentoutput","currentid","compile","updateJSON","log","compileCpp","JSON","stringify","then","result","data","output","Array","fill","map","_","add","remove","targetKey","lastIndex","forEach","pane","filter","onEdit","_ctx","_cache","_component_a_button","_resolveComponent","_component_a_row","_component_a_col","_component_a_tab_pane","_component_a_tabs","_openBlock","_createElementBlock","_createElementVNode","_toDisplayString","name","_Fragment","_renderList","chapters","onClick","$event","_withDirectives","sections","sectionIndex","_vShow","ref_key","controls","onTimeupdate","type","_createTextVNode","_createCommentVNode","_createVNode","default","_withCtx","_createBlock","tab","closable","codeSpace","modelValue","span","__exports__"],"sourceRoot":""}