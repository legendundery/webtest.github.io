{"version":3,"file":"js/about.110c6ac5.js","mappings":"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","sources":["webpack://webide/./src/views/AboutView.vue?9f41","webpack://webide/./src/views/AboutView.vue","webpack://webide/./src/views/AboutView.vue?d56f","webpack://webide/./src/views/PlaygroundView.vue?0e48","webpack://webide/./src/views/PlaygroundView.vue","webpack://webide/./src/views/PlaygroundView.vue?8cac"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport monacoEditor from \"@/components/monacoEditor.vue\";\nimport { ref } from \"vue\";\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'AboutView',\n  setup(__props) {\n\nconst value = ref(\"console.log('HelloWorld')\");\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(monacoEditor, {\n    modelValue: value.value,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((value).value = $event)),\n    language: \"cpp\",\n    options: {},\n    hints: ['table_name'],\n    style: {\"width\":\"300px\",\"height\":\"100%\"}\n  }, null, 8, [\"modelValue\"]))\n}\n}\n\n})","<template>\n  <monaco-editor\n    v-model=\"value\"\n    language=\"cpp\"\n    :options=\"{}\"\n    :hints=\"['table_name']\"\n    style=\"width: 300px; height: 100%\"\n  />\n</template>\n\n<script lang=\"ts\" setup>\nimport monacoEditor from \"@/components/monacoEditor.vue\";\nimport { ref } from \"vue\";\nconst value = ref(\"console.log('HelloWorld')\");\n</script>\n","import script from \"./AboutView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./AboutView.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  id: \"windowContent\",\n  ref: \"windowContentRef\"\n}\nconst _hoisted_2 = { id: \"xuanxiangka\" }\n\nimport codeSpace from \"@/components/codeSpace.vue\";\nimport { ref } from \"vue\";\nimport { compileCpp } from \"@/api/submitCodeOnPlayground\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'PlaygroundView',\n  setup(__props) {\n\nconst currentcode = ref();\nconst currentinput = ref(\"\");\nconst currentoutput = ref(\"\");\nconst currentid = ref(0);\n\nconst compile = () => {\n  currentid.value = activeKey.value;\n  const updateJSON = ref({\n    code: panes.value[activeKey.value].codingcontent,\n    input: panes.value[activeKey.value].inputcontent,\n  });\n  console.log(updateJSON);\n  console.log(currentid.value);\n  console.log(activeKey.value);\n\n  compileCpp(JSON.stringify(updateJSON.value))\n    //.then((response) => JSON.parse(response))\n    .then((result) => {\n      currentoutput.value = result.data.output;\n      panes.value[currentid.value].outputcontent = currentoutput.value;\n      console.log(currentoutput.value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n//选项卡\n\nconst panes = ref<\n  {\n    title: string;\n    key: number;\n    codingcontent: any;\n    inputcontent: any;\n    outputcontent: any;\n    closable?: boolean;\n  }[]\n>(\n  new Array(1).fill(null).map((_, index) => {\n    const id = index;\n    const codingcontent = ref(`write code here. ${id}`);\n    const inputcontent = ref(\"\");\n    const outputcontent = ref(\"\");\n    return {\n      title: `code ${id}`,\n      key: id,\n      codingcontent: codingcontent,\n      inputcontent: inputcontent,\n      outputcontent: outputcontent,\n    };\n  })\n);\nconst activeKey = ref(panes.value[0].key);\n//console.log(activeKey.value);\nconst newTabIndex = ref(0);\n\nconst add = () => {\n  activeKey.value = ++newTabIndex.value;\n  panes.value.push({\n    title: `code${activeKey.value}`,\n    key: activeKey.value,\n    codingcontent: `write code here. ${activeKey.value}`,\n    inputcontent: \"\",\n    outputcontent: \"\",\n  });\n};\n\nconst remove = (targetKey: number) => {\n  let lastIndex = 0;\n  panes.value.forEach((pane, i) => {\n    if (pane.key === targetKey) {\n      lastIndex = i - 1;\n    }\n  });\n  panes.value = panes.value.filter((pane) => pane.key !== targetKey);\n  if (panes.value.length && activeKey.value === targetKey) {\n    if (lastIndex >= 0) {\n      activeKey.value = panes.value[lastIndex].key;\n    } else {\n      activeKey.value = panes.value[0].key;\n    }\n  }\n};\n\nconst onEdit = (targetKey: number) => {\n  remove(targetKey);\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_button = _resolveComponent(\"a-button\")!\n  const _component_a_row = _resolveComponent(\"a-row\")!\n  const _component_a_col = _resolveComponent(\"a-col\")!\n  const _component_a_tab_pane = _resolveComponent(\"a-tab-pane\")!\n  const _component_a_tabs = _resolveComponent(\"a-tabs\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", null, [\n      _createVNode(_component_a_button, { onClick: add }, {\n        default: _withCtx(() => _cache[1] || (_cache[1] = [\n          _createTextVNode(\"ADD\")\n        ])),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_a_tabs, {\n        activeKey: activeKey.value,\n        \"onUpdate:activeKey\": _cache[0] || (_cache[0] = ($event: any) => ((activeKey).value = $event)),\n        \"hide-add\": \"\",\n        type: \"editable-card\",\n        onEdit: onEdit\n      }, {\n        default: _withCtx(() => [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(panes.value, (pane) => {\n            return (_openBlock(), _createBlock(_component_a_tab_pane, {\n              key: pane.key,\n              tab: pane.title,\n              closable: pane.closable\n            }, {\n              default: _withCtx(() => [\n                _createVNode(_component_a_row, { style: {\"height\":\"400px\"} }, {\n                  default: _withCtx(() => [\n                    _createVNode(codeSpace, {\n                      title: \"Code Space\",\n                      compile: compile,\n                      modelValue: pane.codingcontent,\n                      \"onUpdate:modelValue\": ($event: any) => ((pane.codingcontent) = $event)\n                    }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                  ]),\n                  _: 2\n                }, 1024),\n                _createVNode(_component_a_row, null, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_a_col, { span: 12 }, {\n                      default: _withCtx(() => [\n                        _createVNode(codeSpace, {\n                          title: \"input\",\n                          modelValue: pane.inputcontent,\n                          \"onUpdate:modelValue\": ($event: any) => ((pane.inputcontent) = $event)\n                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_a_col, { span: 12 }, {\n                      default: _withCtx(() => [\n                        _createVNode(codeSpace, {\n                          title: \"output\",\n                          modelValue: pane.outputcontent,\n                          \"onUpdate:modelValue\": ($event: any) => ((pane.outputcontent) = $event)\n                        }, null, 8, [\"modelValue\", \"onUpdate:modelValue\"])\n                      ]),\n                      _: 2\n                    }, 1024)\n                  ]),\n                  _: 2\n                }, 1024)\n              ]),\n              _: 2\n            }, 1032, [\"tab\", \"closable\"]))\n          }), 128))\n        ]),\n        _: 1\n      }, 8, [\"activeKey\"])\n    ])\n  ], 512))\n}\n}\n\n})","<template>\n  <div id=\"windowContent\" ref=\"windowContentRef\">\n    <div>\n      <a-button @click=\"add\">ADD</a-button>\n    </div>\n    <div id=\"xuanxiangka\">\n      <a-tabs\n        v-model:activeKey=\"activeKey\"\n        hide-add\n        type=\"editable-card\"\n        @edit=\"onEdit\"\n      >\n        <a-tab-pane\n          v-for=\"pane in panes\"\n          :key=\"pane.key\"\n          :tab=\"pane.title\"\n          :closable=\"pane.closable\"\n        >\n          <a-row style=\"height: 400px\">\n            <codeSpace\n              title=\"Code Space\"\n              :compile=\"compile\"\n              v-model:=\"pane.codingcontent\"\n            />\n          </a-row>\n          <a-row>\n            <a-col :span=\"12\">\n              <codeSpace title=\"input\" v-model:=\"pane.inputcontent\" />\n            </a-col>\n            <a-col :span=\"12\">\n              <codeSpace title=\"output\" v-model:=\"pane.outputcontent\" />\n            </a-col>\n          </a-row>\n        </a-tab-pane>\n      </a-tabs>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport codeSpace from \"@/components/codeSpace.vue\";\nimport { ref } from \"vue\";\nimport { compileCpp } from \"@/api/submitCodeOnPlayground\";\n\nconst currentcode = ref();\nconst currentinput = ref(\"\");\nconst currentoutput = ref(\"\");\nconst currentid = ref(0);\n\nconst compile = () => {\n  currentid.value = activeKey.value;\n  const updateJSON = ref({\n    code: panes.value[activeKey.value].codingcontent,\n    input: panes.value[activeKey.value].inputcontent,\n  });\n  console.log(updateJSON);\n  console.log(currentid.value);\n  console.log(activeKey.value);\n\n  compileCpp(JSON.stringify(updateJSON.value))\n    //.then((response) => JSON.parse(response))\n    .then((result) => {\n      currentoutput.value = result.data.output;\n      panes.value[currentid.value].outputcontent = currentoutput.value;\n      console.log(currentoutput.value);\n    })\n    .catch((err) => {\n      console.log(err);\n    });\n};\n\n//选项卡\n\nconst panes = ref<\n  {\n    title: string;\n    key: number;\n    codingcontent: any;\n    inputcontent: any;\n    outputcontent: any;\n    closable?: boolean;\n  }[]\n>(\n  new Array(1).fill(null).map((_, index) => {\n    const id = index;\n    const codingcontent = ref(`write code here. ${id}`);\n    const inputcontent = ref(\"\");\n    const outputcontent = ref(\"\");\n    return {\n      title: `code ${id}`,\n      key: id,\n      codingcontent: codingcontent,\n      inputcontent: inputcontent,\n      outputcontent: outputcontent,\n    };\n  })\n);\nconst activeKey = ref(panes.value[0].key);\n//console.log(activeKey.value);\nconst newTabIndex = ref(0);\n\nconst add = () => {\n  activeKey.value = ++newTabIndex.value;\n  panes.value.push({\n    title: `code${activeKey.value}`,\n    key: activeKey.value,\n    codingcontent: `write code here. ${activeKey.value}`,\n    inputcontent: \"\",\n    outputcontent: \"\",\n  });\n};\n\nconst remove = (targetKey: number) => {\n  let lastIndex = 0;\n  panes.value.forEach((pane, i) => {\n    if (pane.key === targetKey) {\n      lastIndex = i - 1;\n    }\n  });\n  panes.value = panes.value.filter((pane) => pane.key !== targetKey);\n  if (panes.value.length && activeKey.value === targetKey) {\n    if (lastIndex >= 0) {\n      activeKey.value = panes.value[lastIndex].key;\n    } else {\n      activeKey.value = panes.value[0].key;\n    }\n  }\n};\n\nconst onEdit = (targetKey: number) => {\n  remove(targetKey);\n};\n</script>\n","import script from \"./PlaygroundView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./PlaygroundView.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_defineComponent","__name","setup","__props","value","ref","_ctx","_cache","_openBlock","_createBlock","monacoEditor","modelValue","$event","language","options","hints","style","__exports__","_hoisted_1","id","_hoisted_2","currentoutput","currentid","compile","activeKey","updateJSON","code","panes","codingcontent","input","inputcontent","console","log","compileCpp","JSON","stringify","then","result","data","output","outputcontent","catch","err","Array","fill","map","_","index","title","key","newTabIndex","add","push","remove","targetKey","lastIndex","forEach","pane","i","filter","length","onEdit","_component_a_button","_resolveComponent","_component_a_row","_component_a_col","_component_a_tab_pane","_component_a_tabs","_createElementBlock","_createElementVNode","_createVNode","onClick","default","_withCtx","_createTextVNode","type","_Fragment","_renderList","tab","closable","codeSpace","span"],"sourceRoot":""}