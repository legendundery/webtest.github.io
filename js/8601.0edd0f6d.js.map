{"version":3,"file":"js/8601.0edd0f6d.js","mappings":"8MAEO,MAAMA,EAAaC,eACXC,EAAAA,EACVC,KAAK,SAAUC,EAAM,CACpBC,QAAS,CACP,eAAgB,yBAGnBC,MAAMC,IACLC,QAAQC,IAAI,OAAQF,EAASG,MACtBH,EAASG,QAEjBC,OAAOC,IACNJ,QAAQI,MAAM,OAAQA,EAAM,ICZrBC,EAAUZ,eACRC,EAAAA,EAASY,IAAI,WAAaC,EAAU,CAC/CC,aAAc,S,eCDlB,MAAMC,EAAa,CAAEC,MAAO,aACtBC,EAAa,CAAC,OAOpB,OAA4BC,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,YACRC,KAAAA,CAAMC,GCER,MAAMC,GAASC,EAAAA,EAAAA,IAAI,IAEnB,IAAIrB,EACJ,MAAMsB,EAAcC,IAClBvB,EAAOuB,EAAMC,OAAOC,MAAM,GAC1BrB,QAAQC,IAAIL,EAAK,EAGb0B,EAAcH,IAClBA,EAAMI,iBACN,IAAIC,EAAW,IAAIC,SACnBD,EAASE,OAAO,OAAQ9B,GACxBJ,EAAWgC,GACR1B,MAAM6B,IACL3B,QAAQC,IAAI,OAAQ0B,GAChBA,GACFtB,EAAQsB,GAAK7B,MAAM8B,IACjB,MAAMC,EAAO,IAAIC,KAAK,CAACF,EAAQ1B,OAC/Bc,EAAOe,MAAQC,IAAIC,gBAAgBJ,GACnC7B,QAAQC,IAAIe,EAAO,GACnB,IAELb,OAAOC,IACNJ,QAAQI,MAAM,OAAQA,EAAM,GAC5B,EDGN,MAAO,CAAC8B,EAAUC,KAChB,MAAMC,GAAsBC,EAAAA,EAAAA,IAAkB,YAE9C,OAAQC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO9B,EAAY,EAC3D+B,EAAAA,EAAAA,IAAoB,OAAQ,KAAM,EAChCA,EAAAA,EAAAA,IAAoB,QAAS,CAC3BC,KAAM,OACNC,SAAUP,EAAO,KAAOA,EAAO,GAAMQ,GAAiBzB,EAAWyB,KAChE,KAAM,KACTC,EAAAA,EAAAA,IAAaR,EAAqB,CAChCS,QAASV,EAAO,KAAOA,EAAO,GAAMQ,GAAiBrB,EAAWqB,KAC/D,CACDG,SAASC,EAAAA,EAAAA,KAAS,IAAMZ,EAAO,KAAOA,EAAO,GAAK,EAChDa,EAAAA,EAAAA,IAAiB,cAEnBC,EAAG,OAGPT,EAAAA,EAAAA,IAAoB,MAAO,CACzBU,IAAKlC,EAAOe,MACZoB,IAAK,WACJ,KAAM,EAAGxC,IACZ,CAEJ,IE/DA,MAAMyC,EAAc,EAEpB,O","sources":["webpack://webide/./src/api/submitFile.ts","webpack://webide/./src/api/getFile.ts","webpack://webide/./src/views/debugView.vue?dc8e","webpack://webide/./src/views/debugView.vue","webpack://webide/./src/views/debugView.vue?e099"],"sourcesContent":["import newAxios from \"@/request\";\n\nexport const submitFile = async (file: FormData) => {\n  return await newAxios\n    .post(\"upload\", file, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    })\n    .then((response) => {\n      console.log(\"上传成功\", response.data);\n      return response.data;\n    })\n    .catch((error) => {\n      console.error(\"上传失败\", error);\n    });\n};\n","import newAxios from \"@/request\";\n\nexport const getFile = async (filepath: string) => {\n  return await newAxios.get(\"uploads/\" + filepath, {\n    responseType: \"blob\",\n  });\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"container\" }\nconst _hoisted_2 = [\"src\"]\n\nimport { submitFile } from \"@/api/submitFile\";\nimport { getFile } from \"@/api/getFile\";\nimport { ref } from \"vue\";\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'debugView',\n  setup(__props) {\n\nconst imgURL = ref(\"\");\n\nvar file: Blob;\nconst uploadFile = (event: any) => {\n  file = event.target.files[0];\n  console.log(file);\n};\n\nconst submitForm = (event: any) => {\n  event.preventDefault();\n  var formData = new FormData();\n  formData.append(\"file\", file);\n  submitFile(formData)\n    .then((res) => {\n      console.log(\"上传成功\", res);\n      if (res)\n        getFile(res).then((resFile) => {\n          const blob = new Blob([resFile.data]);\n          imgURL.value = URL.createObjectURL(blob);\n          console.log(imgURL);\n        });\n    })\n    .catch((error) => {\n      console.error(\"上传失败\", error);\n    });\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_a_button = _resolveComponent(\"a-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"form\", null, [\n      _createElementVNode(\"input\", {\n        type: \"file\",\n        onChange: _cache[0] || (_cache[0] = ($event: any) => (uploadFile($event)))\n      }, null, 32),\n      _createVNode(_component_a_button, {\n        onClick: _cache[1] || (_cache[1] = ($event: any) => (submitForm($event)))\n      }, {\n        default: _withCtx(() => _cache[2] || (_cache[2] = [\n          _createTextVNode(\"submit\")\n        ])),\n        _: 1\n      })\n    ]),\n    _createElementVNode(\"img\", {\n      src: imgURL.value,\n      alt: \"display\"\n    }, null, 8, _hoisted_2)\n  ]))\n}\n}\n\n})","<template>\n  <div class=\"container\">\n    <form>\n      <input type=\"file\" @change=\"uploadFile($event)\" />\n      <a-button @click=\"submitForm($event)\">submit</a-button>\n    </form>\n    <img :src=\"imgURL\" alt=\"display\" />\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport { submitFile } from \"@/api/submitFile\";\nimport { getFile } from \"@/api/getFile\";\nimport { ref } from \"vue\";\n\nconst imgURL = ref(\"\");\n\nvar file: Blob;\nconst uploadFile = (event: any) => {\n  file = event.target.files[0];\n  console.log(file);\n};\n\nconst submitForm = (event: any) => {\n  event.preventDefault();\n  var formData = new FormData();\n  formData.append(\"file\", file);\n  submitFile(formData)\n    .then((res) => {\n      console.log(\"上传成功\", res);\n      if (res)\n        getFile(res).then((resFile) => {\n          const blob = new Blob([resFile.data]);\n          imgURL.value = URL.createObjectURL(blob);\n          console.log(imgURL);\n        });\n    })\n    .catch((error) => {\n      console.error(\"上传失败\", error);\n    });\n};\n</script>\n\n<style scoped></style>\n","import script from \"./debugView.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./debugView.vue?vue&type=script&lang=ts&setup=true\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["submitFile","async","newAxios","post","file","headers","then","response","console","log","data","catch","error","getFile","get","filepath","responseType","_hoisted_1","class","_hoisted_2","_defineComponent","__name","setup","__props","imgURL","ref","uploadFile","event","target","files","submitForm","preventDefault","formData","FormData","append","res","resFile","blob","Blob","value","URL","createObjectURL","_ctx","_cache","_component_a_button","_resolveComponent","_openBlock","_createElementBlock","_createElementVNode","type","onChange","$event","_createVNode","onClick","default","_withCtx","_createTextVNode","_","src","alt","__exports__"],"sourceRoot":""}